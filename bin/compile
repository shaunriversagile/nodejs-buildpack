#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>
set -euo pipefail

BUILD_DIR=$1
CACHE_DIR=$2
export BUILDPACK_DIR=`dirname $(readlink -f ${BASH_SOURCE%/*})`
export DEPS_DIR="$BUILD_DIR/.cloudfoundry"
mkdir -p "$DEPS_DIR/0"
mkdir -p "$BUILD_DIR/.profile.d"
echo "export DEPS_DIR=\$HOME/.cloudfoundry" > "$BUILD_DIR/.profile.d/0000_set-deps-dir.sh"

$BUILDPACK_DIR/bin/supply "$BUILD_DIR" "$CACHE_DIR" "$DEPS_DIR" 0
$BUILDPACK_DIR/bin/finalize "$BUILD_DIR" "$CACHE_DIR" "$DEPS_DIR" 0

echo "ENV_DIR value = $ENV_DIR"

# config
# http://orm-buildpack.s3.amazonaws.com/Xvfb.tar.gz
echo "starting XVFB install Buildpack URL xvfb.tar.bz2"
# Buildpack URL
ARCHIVE_NAME=xvfb
FILE_NAME=xvfb_1.15.1-0ubuntu2.7_amd64.deb
BUILDPACK_XVFB_PACKAGE=http://archive.ubuntu.com/ubuntu/pool/main/x/xorg-server/xvfb_1.15.1-0ubuntu2.7_amd64.deb

mkdir -p $CACHE_DIR
if ! [ -e $CACHE_DIR/$FILE_NAME ]; then
  echo "-----> Fetching XVFB binaries at ${BUILDPACK_XVFB_PACKAGE}"
  curl $BUILDPACK_XVFB_PACKAGE -s -o $CACHE_DIR/$FILE_NAME
fi

echo "-----> Extracting XVFB binaries to ${BUILD_DIR}/$ARCHIVE_NAME"
mkdir -p $CACHE_DIR/$ARCHIVE_NAME
mkdir -p /home/vcap/app/$ARCHIVE_NAME
mkdir -p $BUILD_DIR/$ARCHIVE_NAME
mkdir -p /home/vcap/app/bin

# -- tar jxf $CACHE_DIR/$FILE_NAME -C $CACHE_DIR
dpkg -x $CACHE_DIR/$FILE_NAME $CACHE_DIR/$ARCHIVE_NAME
echo "after dpkg -x $CACHE_DIR/$FILE_NAME to $BUILD_DIR/$ARCHIVE_NAME"
mv $CACHE_DIR/$ARCHIVE_NAME/usr/ $BUILD_DIR/$ARCHIVE_NAME
echo "almost done, after not using apt-get $ARCHIVE_NAME $BUILD_DIR/$ARCHIVE_NAME"
echo "$BUILD_DIR= `ls -ltr $BUILD_DIR`"
echo " contents of /$ARCHIVE_NAME is: `ls -ltr $BUILD_DIR/$ARCHIVE_NAME`"

# --- perms cp cp  $BUILD_DIR/$ARCHIVE_NAME/usr/bin/* /usr/local/bin 
# -- $BUILD_DIR /home/vcap/app/
cp $BUILD_DIR/$ARCHIVE_NAME/usr/bin/* /home/vcap/app/bin
echo " contents of /home/vcap/app/bin is: `ls -ltr /home/vcap/app/bin`"

export PATH="$BUILD_DIR/$ARCHIVE_NAME/usr/bin:/home/vcap/app/bin":$PATH
export PATH="$BUILD_DIR/$ARCHIVE_NAME"
export PATH="/tmp/staged/app/xvfb"
# -- /tmp/staged/app/node_modules/phantomjs/lib/phantom/bin/phantomjs

# -- export LD_LIBRARY_PATH="$BUILD_DIR/vendor/xvfb/":$LD_LIBRARY_PATH
# -- test it?
# echo " does the xvfb-run be found? `xvfb-run` " 

# mkdir -p $BUILD_DIR/.heroku/node/
cd $BUILD_DIR
export PATH="$BUILD_DIR/.heroku/node/bin:$BUILD_DIR/xvfb/usr/bin:/home/vcap/app/bin":$PATH

